[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = "has('nvim') && has('python3')"
on_event = 'InsertEnter'
depends = 'neco-look'
hook_add = '''
" Use deoplete.
let g:deoplete#enable_at_startup = 1
" Use smartcase.
let g:deoplete#enable_smart_case = 1

" <C-h>, <BS>: close popup and delete backword char.
inoremap <expr><C-h> deoplete#smart_close_popup()."\<C-h>"
inoremap <expr><BS>  deoplete#smart_close_popup()."\<C-h>"

" <CR>: close popup and save indent.
inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
function! s:my_cr_function() abort
return deoplete#close_popup() . "\<CR>"
endfunction
'''
hook_post_source = '''
call deoplete#custom#var('omni', 'input_patterns', {
      \ 'ruby': ['[^. *\t]\.\w*', '[a-zA-Z_]\w*::'],
      \ 'java': '[^. *\t]\.\w*',
      \ 'php': '\w+|[^. \t]->\w*|\w+::\w*',
      \})
call deoplete#custom#source('omni', 'functions', {
      \ 'ruby':  'rubycomplete#Complete',
      \ 'javascript': ['tern#Complete', 'jspc#omni']
      \})
call deoplete#custom#source('look', 'rank', 50)
'''

[[plugins]]
repo = 'Shougo/neocomplete'
if = "!(has('nvim') && has('python3')) && has('lua') && ( (v:version == 703 && has('patch885')) || v:version >= 704 )"
on_event = 'InsertEnter'
depends = 'neco-look'
hook_add = 'source ~/.vim/neocomplete.rc.vim'
hook_post_source = '''
if !exists('g:neocomplete#sources#omni#input_patterns')
  let g:neocomplete#sources#omni#input_patterns = {}
endif
let g:neocomplete#sources#omni#input_patterns.tex =
      \ g:vimtex#re#neocomplete
'''

[[plugins]]
repo = 'Shougo/neocomplcache'
if = "!(has('nvim') && has('python3')) && !(has('lua') && ( (v:version == 703 && has('patch885')) || v:version >= 704 ))"
on_event = 'InsertEnter'
hook_add = 'source ~/.vim/neocomplcache.rc.vim'

[[plugins]]
repo = 'ujihisa/neco-look'
if = "executable('look')"

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'
