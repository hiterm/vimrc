[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = "has('nvim') && has('python3')"
on_event = 'InsertEnter'
depends = 'neco-look'
hook_post_source = '''
call deoplete#custom#var('omni', 'input_patterns', {
      \ 'java': '[^. *\t]\.\w*',
      \ 'php': '\w+|[^. \t]->\w*|\w+::\w*',
      \})
call deoplete#custom#source('omni', 'functions', {
      \ 'javascript': ['tern#Complete', 'jspc#omni']
      \})
'''

[[plugins]]
repo = 'Shougo/neocomplete'
if = "!(has('nvim') && has('python3')) && has('lua') && ( (v:version == 703 && has('patch885')) || v:version >= 704 )"
on_event = 'InsertEnter'
depends = 'neco-look'
hook_add = 'source ~/.vim/neocomplete.rc.vim'
hook_post_source = '''
if !exists('g:neocomplete#sources#omni#input_patterns')
  let g:neocomplete#sources#omni#input_patterns = {}
endif
let g:neocomplete#sources#omni#input_patterns.tex =
      \ g:vimtex#re#neocomplete
'''

[[plugins]]
repo = 'Shougo/neocomplcache'
if = "!(has('nvim') && has('python3')) && !(has('lua') && ( (v:version == 703 && has('patch885')) || v:version >= 704 ))"
on_event = 'InsertEnter'
hook_add = 'source ~/.vim/neocomplcache.rc.vim'

[[plugins]]
repo = 'ujihisa/neco-look'
if = "executable('look')"

[[plugins]]
repo = 'cohama/lexima.vim'
on_event = 'InsertEnter'
hook_post_source = 'source ~/.vim/lexima.rc.vim'

# filetype pluins

[[plugins]]
repo = 'lervag/vimtex'
on_ft = 'tex'

[[plugins]]
repo = 'hynek/vim-python-pep8-indent'
on_ft = 'python'

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'

[[plugins]]
repo = 'derekwyatt/vim-scala'
on_ft = 'scala'

[[plugins]]
repo = 'matze/vim-lilypond'
on_ft = 'lilypond'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'
hook_add = '''
augroup MyAutoCmd
  autocmd BufRead,BufNewFile *.toml setfiletype toml
augroup END
'''

[[plugins]]
repo = 'mxw/vim-jsx'
depends = 'vim-javascript'
hook_add = '''
let g:jsx_ext_required = 0
'''

[[plugins]]
repo = 'pangloss/vim-javascript'

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = 'typescript'

[[plugins]]
repo = 'fishbullet/deoplete-ruby'
on_ft = ['ruby']

[[plugins]]
repo = 'tpope/vim-rails'
on_ft = ['ruby', 'haml', 'eruby']

[[plugins]]
repo = 'basyura/unite-rails'
on_ft = ['ruby', 'haml', 'eruby']

[[plugins]]
repo = 'alvan/vim-closetag'
on_ft = 'html'

[[plugins]]
repo = 'zchee/deoplete-clang'
on_ft = ['c', 'cpp']
hook_add = '''
if has('mac')
  let g:deoplete#sources#clang#libclang_path = '/Library/Developer/CommandLineTools/usr/lib/libclang.dylib'
  let g:deoplete#sources#clang#clang_header = '/Library/Developer/CommandLineTools/usr/lib/clang'
endif
'''

# filetype pluins ここまで

[[plugins]]
repo = 'scrooloose/nerdtree'
on_cmd = ['NerdTree', 'NerdTreeToggle']
hook_add = '''
nnoremap <silent> <C-e> :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'
on_map = '<Plug>'

[[plugins]]
repo = 'Shougo/neosnippet'
depends = 'neosnippet-snippets'
on_event = 'InsertEnter'
on_ft = 'snippet'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'rhysd/committia.vim'
on_path = 'COMMIT_EDITMSG'

[[plugins]]
repo = 'osyo-manga/vim-anzu'
on_map = '<Plug>'
hook_add = '''
nmap n <Plug>(anzu-n-with-echo)
nmap N <Plug>(anzu-N-with-echo)
nmap * <Plug>(anzu-star-with-echo)
nmap # <Plug>(anzu-sharp-with-echo)
" clear status
nmap <Esc><Esc> <Plug>(anzu-clear-search-status)
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'
hook_add = '''
" カーソル移動時の自動切り替えを無効化
let g:precious_enable_switch_CursorMoved = {
      \	"*" : 0
      \}
let g:precious_enable_switch_CursorMoved_i = {
      \	"*" : 0
      \}

" insert に入った時にスイッチし、抜けた時に元に戻す
augroup test
  autocmd!
  autocmd InsertEnter * :PreciousSwitch
  autocmd InsertLeave * :PreciousReset
augroup END
'''

[[plugins]]
repo = 'Shougo/unite-outline'

# colorscheme
[[plugins]]
repo = 'nanotech/jellybeans.vim'

[[plugins]]
repo = 'altercation/vim-colors-solarized'

[[plugins]]
repo = 'jacoborus/tender'
