[[plugins]]
repo = 'Shougo/dein.vim'
hook_add = '''
let g:dein#types#git#clone_depth=1
'''

[[plugins]]
repo = 'haya14busa/dein-command.vim'

# fzf
[[plugins]]
repo = "junegunn/fzf"
merged = 0
hook_add = '''
source ~/.vim/fzf.rc.vim
'''

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
merged = 0

[[plugins]]
repo = 'pbogut/fzf-mru.vim'
hook_add = '''
let g:fzf_mru_max = 1000
let g:fzf_mru_no_sort = 1
'''

[[plugins]]
repo = 'dominickng/fzf-session.vim.git'
depends = 'fzf'
hook_add = '''
let g:fzf_session_path = '~/.vim_sessions'
'''

# neosnippet
[[plugins]]
repo = 'Shougo/neosnippet'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

# appearance
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
let g:indent_guides_enable_on_vim_startup = 1
augroup MyIndentGuides
  autocmd!
  autocmd FileType defx IndentGuidesDisable
  autocmd FileType neoterm IndentGuidesDisable
  autocmd FileType fzf IndentGuidesDisable
augroup END
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = 'source ~/.vim/lightline.rc.vim'

[[plugins]]
repo = 'ntpeters/vim-better-whitespace'
hook_add = '''
let g:better_whitespace_enabled=1
let g:better_whitespace_filetypes_blacklist = ['defx', 'markdown', 'gitcommit']
let g:better_whitespace_operator=''
augroup MyIndentGuides
  autocmd!
  autocmd FileType help DisableWhitespace
augroup END
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
hook_add = '''
lua << EOF
require'nvim-treesitter.configs'.setup {
  ensure_installed = "maintained", -- one of "all", "maintained" (parsers with maintainers), or a list of languages
  highlight = {
    enable = true,              -- false will disable the whole extension
    disable = { "toml" },
  },
  incremental_selection = {
    enable = true,
    keymaps = {
      init_selection = "gnn",
      node_incremental = "grn",
      scope_incremental = "grc",
      node_decremental = "grm",
    },
  },
  indent = {
    enable = true
  }
}
EOF

" Currently not working
" tomlの中のVim scriptでPreciousが効くようにする
" augroup MyTreeSitter
"   autocmd!
"   autocmd User PreciousFileType_vim TSBufDisable highlight
" augroup END
'''

[[plugins]]
repo = 'p00f/nvim-ts-rainbow'
hook_add = '''
lua << EOF
require'nvim-treesitter.configs'.setup {
  rainbow = {
    enable = true,
    disable = {'bash'} -- please disable bash until I figure #1 out
  }
}
EOF
'''

# edit
[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'rhysd/clever-f.vim'
hook_add = '''
map ; <Plug>(clever-f-repeat-forward)
map , <Plug>(clever-f-repeat-back)
let g:clever_f_use_migemo = 1
'''

# lexima
[[plugins]]
repo = 'cohama/lexima.vim'
hook_post_source = 'source ~/.vim/lexima.rc.vim'

[[plugins]]
repo = "sbdchd/vim-shebang"
hook_add = '''
let g:shebang#shebangs = {
      \ 'sh': '#!/bin/bash',
      \ }
'''

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
let g:ale_lint_on_text_changed = 0
let g:ale_linters = {
      \ 'ruby': ['ruby', 'rubocop'],
      \ 'sh': ['shell', 'shellcheck'],
      \ 'csh': ['shell', 'shellcheck'],
      \ 'typescript': ['eslint'],
      \ 'javascript': ['eslint'],
      \ 'typescriptreact': ['eslint'],
      \ }

if !exists('g:ale_fixers')
  let g:ale_fixers = {}
endif
let s:ale_fixer_js = [
      \ 'eslint',
      \]
let g:ale_fixers.ruby = ['rubocop']
let g:ale_fixers['typescript'] = s:ale_fixer_js
let g:ale_fixers['javascript'] = s:ale_fixer_js
let g:ale_fixers['typescriptreact'] = s:ale_fixer_js

let g:ale_disable_lsp = 1
let g:ale_sign_error = ''
let g:ale_sign_warning = ''
let g:ale_statusline_format = [' %d', ' %d', '']

let g:ale_type_map = {'eslint': {'E': 'ES'}}
'''
hook_post_source = '''
highlight! link ALEStyleError ALEWarning
'''

[[plugins]]
repo = 'kkoomen/vim-doge'

[[plugins]]
repo = 'justinmk/vim-sneak'
hook_add = '''
let g:sneak#label = 1
'''

# textobj
[[plugins]]
repo = 'michaeljsmith/vim-indent-object'

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-line'

[[plugins]]
repo = 'tpope/vim-repeat'

# git
[[plugins]]
repo = 'airblade/vim-gitgutter'

# Japanese
[[plugins]]
repo = 'haya14busa/vim-migemo'

[[plugins]]
repo = 'deton/jasegment.vim'

# filetype
[[plugins]]
repo = 'sheerun/vim-polyglot'
hook_add = '''
let g:polyglot_disabled = ['tex', 'typescript', 'jsx']
'''

[[plugins]]
repo = 'HerringtonDarkholme/yats.vim'

[[plugins]]
repo = 'htlsne/vim-styled-components'

[[plugins]]
repo = 'lervag/vimtex'

[[plugins]]
repo = 'sophacles/vim-processing'

# terminal
[[plugins]]
repo = 'voldikss/vim-floaterm'
hook_add = '''
" tnoremap <C-]> <C-\><C-n>
let g:floaterm_keymap_toggle = '<C-g>'
let g:floaterm_width = 0.9
let g:floaterm_height = 0.9

" use like quickrun
augroup MyNeoterm
  autocmd!
  autocmd FileType rust nnoremap <Leader>r :FloatermNew cargo run<CR>
  autocmd FileType rust nnoremap <Leader>R :FloatermSend cargo run<CR>:FloatermToggle<CR>
  autocmd FileType rust nnoremap <Leader>t :FloatermNew cargo test<CR>
  autocmd FileType rust nnoremap <Leader>T :FloatermSend cargo test<CR>:FloatermToggle<CR>
augroup END
'''

# colorscheme
[[plugins]]
repo = 'sainnhe/edge'
