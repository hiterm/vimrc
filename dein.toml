[[plugins]]
repo = 'Shougo/dein.vim'
hook_add = '''
let g:dein#types#git#clone_depth=1
'''

[[plugins]]
repo = 'haya14busa/dein-command.vim'

# telescope
[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
hook_add = '''
source ~/.config/nvim/rc/telescope.rc.vim
'''

# appearance
[[plugins]]
repo = 'lukas-reineke/indent-blankline.nvim'
hook_add = '''
lua << EOF
require("indent_blankline").setup {
    use_treesitter = true,
    show_current_context = true,
    show_current_context_start = true,
}
EOF
'''

[[plugins]]
repo = 'nvim-lualine/lualine.nvim'
hook_add = 'lua require("config/lualine")'

[[plugins]]
repo = 'akinsho/bufferline.nvim'
hook_add = 'lua require("bufferline").setup{}'

[[plugins]]
repo = 'ntpeters/vim-better-whitespace'
hook_add = '''
let g:better_whitespace_enabled=1
let g:better_whitespace_filetypes_blacklist = ['defx', 'markdown', 'gitcommit']
let g:better_whitespace_operator=''
augroup MyIndentGuides
  autocmd!
  autocmd FileType help DisableWhitespace
augroup END
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
hook_add = '''
lua require('config/treesitter')
'''

[[plugins]]
repo = 'nvim-treesitter/playground'

[[plugins]]
repo = 'p00f/nvim-ts-rainbow'

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter-textobjects'
hook_add = '''
lua <<EOF
require'nvim-treesitter.configs'.setup {
  textobjects = {
    select = {
      enable = true,

      -- Automatically jump forward to textobj, similar to targets.vim
      lookahead = true,

      keymaps = {
        -- You can use the capture groups defined in textobjects.scm
        ["af"] = "@function.outer",
        ["if"] = "@function.inner",
        ["ac"] = "@class.outer",
        ["ic"] = "@class.inner",
      },
    },
  },
}
EOF
'''

# edit
[[plugins]]
repo = 'machakann/vim-sandwich'
hook_add = '''
runtime macros/sandwich/keymap/surround.vim
'''

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'JoosepAlviste/nvim-ts-context-commentstring'
merged = 0

[[plugins]]
repo = 'rhysd/clever-f.vim'
hook_add = '''
map ; <Plug>(clever-f-repeat-forward)
map , <Plug>(clever-f-repeat-back)
let g:clever_f_use_migemo = 1
'''

[[plugins]]
repo = 'hrsh7th/vim-searchx'
hook_add = '''
" Overwrite / and ?.
nnoremap g? <Cmd>call searchx#start({ 'dir': 0 })<CR>
nnoremap g/ <Cmd>call searchx#start({ 'dir': 1 })<CR>
xnoremap g? <Cmd>call searchx#start({ 'dir': 0 })<CR>
xnoremap g/ <Cmd>call searchx#start({ 'dir': 1 })<CR>
cnoremap ; <Cmd>call searchx#select()<CR>

" Move to next/prev match.
nnoremap N <Cmd>call searchx#prev_dir()<CR>
nnoremap n <Cmd>call searchx#next_dir()<CR>
xnoremap N <Cmd>call searchx#prev_dir()<CR>
xnoremap n <Cmd>call searchx#next_dir()<CR>

let g:searchx = {}

" Auto jump if the recent input matches to any marker.
let g:searchx.auto_accept = v:true

" The scrolloff value for moving to next/prev.
let g:searchx.scrolloff = &scrolloff

" To enable scrolling animation.
let g:searchx.scrolltime = 100

" Marker characters.
let g:searchx.markers = split('ABCDEFGHIJKLMNOPQRSTUVWXYZ', '.\zs')

" Convert search pattern.
function g:searchx.convert(input) abort
  if a:input !~# '\k'
    return '\V' .. a:input
  endif
  return a:input[0] .. substitute(a:input[1:], '\\\@<! ', '.\\{-}', 'g')
endfunction
'''

[[plugins]]
repo = 'thinca/vim-qfreplace'

[[plugins]]
repo = "sbdchd/vim-shebang"
hook_add = '''
let g:shebang#shebangs = {
      \ 'sh': '#!/bin/bash',
      \ }
'''

[[plugins]]
repo = 'justinmk/vim-sneak'
hook_add = '''
let g:sneak#label = 1
'''

# textobj
[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-line'

[[plugins]]
repo = 'tpope/vim-repeat'

# git
[[plugins]]
repo = 'lewis6991/gitsigns.nvim'
hook_add = "lua require('gitsigns').setup()"

# Japanese
[[plugins]]
repo = 'haya14busa/vim-migemo'
if = "executable('cmigemo')"
hook_add = '''
nnoremap g/ :Migemo<CR>
'''

[[plugins]]
repo = 'deton/jasegment.vim'

# filetype
[[plugins]]
repo = 'lervag/vimtex'
hook_add = 'source ~/.config/nvim/rc/vimtex.rc.vim'

[[plugins]]
repo = 'sophacles/vim-processing'

# terminal
[[plugins]]
repo = 'voldikss/vim-floaterm'
hook_add = '''
" tnoremap <C-]> <C-\><C-n>
let g:floaterm_keymap_toggle = '<C-g>'
let g:floaterm_width = 0.9
let g:floaterm_height = 0.9

" use like quickrun
augroup MyNeoterm
  autocmd!
  autocmd FileType rust nnoremap <Leader>r :FloatermNew cargo run<CR>
  autocmd FileType rust nnoremap <Leader>R :FloatermSend cargo run<CR>:FloatermToggle<CR>
  autocmd FileType rust nnoremap <Leader>t :FloatermNew cargo test<CR>
  autocmd FileType rust nnoremap <Leader>T :FloatermSend cargo test<CR>:FloatermToggle<CR>
augroup END
'''

# colorscheme
[[plugins]]
repo = 'sainnhe/edge'

[[plugins]]
repo = 'EdenEast/nightfox.nvim'
hook_add = 'colorscheme nightfox'
