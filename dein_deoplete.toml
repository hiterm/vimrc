[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = "has('nvim') && has('python3')"
depends = 'context_filetype.vim'
on_event = 'InsertEnter'
hook_add = '''
" Use deoplete.
let g:deoplete#enable_at_startup = 1

" <C-h>, <BS>: close popup and delete backword char.
inoremap <expr><C-h> deoplete#smart_close_popup()."\<C-h>"
inoremap <expr><BS>  deoplete#smart_close_popup()."\<C-h>"

" <CR>: close popup and save indent.
inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
function! s:my_cr_function() abort
  return deoplete#close_popup() . "\<CR>"
endfunction
'''
hook_post_source = '''
call deoplete#custom#source('look', 'rank', 50)
call deoplete#custom#source('tabnine', 'rank', 80)
call deoplete#custom#source('neosnippet', 'rank', 1500)
'''

[[plugins]]
repo = 'ujihisa/neco-look'
if = "executable('look')"
lazy = 0

[[plugins]]
repo = 'zchee/deoplete-jedi'
if = "!executable('pyls')"
on_ft = 'python'

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'wellle/tmux-complete.vim'
on_source = 'deoplete.nvim'

[[plugins]]
repo = 'deoplete-plugins/deoplete-zsh'
lazy = 0

[[plugins]]
repo = 'tbodt/deoplete-tabnine'
lazy = 0
build = './install.sh'

[[plugins]]
repo = 'ncm2/float-preview.nvim'
on_source = 'deoplete.nvim'
hook_add = '''
set completeopt-=preview
function! s:set_preview_docked()
  if winwidth('%') > 80
    let g:float_preview#docked = 0
  else
    let g:float_preview#docked = 1
  endif
endfunction
call s:set_preview_docked()
augroup MyFloadPreview
  autocmd!
  autocmd VimResized * call s:set_preview_docked()
augroup END
'''
